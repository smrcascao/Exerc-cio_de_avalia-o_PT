{"version":3,"file":"router_testing_module.js","sourceRoot":"","sources":["../../../../../modules/@angular/router/testing/router_testing_module.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;OAEI,EAAC,QAAQ,EAAE,gBAAgB,EAAC,MAAM,iBAAiB;OACnD,EAAC,oBAAoB,EAAE,WAAW,EAAC,MAAM,yBAAyB;OAClE,EAAC,QAAQ,EAAE,UAAU,EAAE,QAAQ,EAAuB,QAAQ,EAAmB,qBAAqB,EAAC,MAAM,eAAe;OAE5H,EAAQ,MAAM,EAAE,eAAe,EAAE,aAAa,EAAC,MAAM,UAAU;OAE/D,EAAC,MAAM,EAAC,MAAM,6BAA6B;OAC3C,EAAC,gBAAgB,EAAE,YAAY,EAAE,aAAa,EAAC,MAAM,sBAAsB;OAC3E,EAAC,OAAO,EAAC,MAAM,yBAAyB;AAC/C;IAGE,YAAoB,QAAkB;QAAlB,aAAQ,GAAR,QAAQ,CAAU;QAF/B,mBAAc,GAA0B,EAAE,CAAC;IAET,CAAC;IAE1C,IAAI,CAAC,IAAY;QACf,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC9B,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;QACrE,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAM,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,sBAAsB,IAAI,EAAE,CAAC,CAAC,CAAC;QACtE,CAAC;IACH,CAAC;AASH,CAAC;AARD,kBAAkB;AACX,mCAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,uCAAc,GAA2D;IAChF,EAAC,IAAI,EAAE,QAAQ,GAAG;CACjB,CACA;AAED,4BACI,aAA4B,EAAE,SAA0B,EAAE,QAAkB,EAC5E,MAA6B,EAAE,QAAkB,EAAE,QAAkB,EAAE,MAAiB;IAC1F,MAAM,CAAC,IAAI,MAAM,CACb,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;AAC7F,CAAC;AACD;IACE,OAAO,UAAU,CAAC,MAAc;QAC9B,MAAM,CAAC,EAAC,QAAQ,EAAE,mBAAmB,EAAE,SAAS,EAAE,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC;IAC7E,CAAC;AAmBH,CAAC;AAlBD,kBAAkB;AACX,8BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;gBACvB,OAAO,EAAE,CAAC,YAAY,CAAC;gBACvB,SAAS,EAAE;oBACT,gBAAgB,EAAE,EAAC,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,WAAW,EAAC;oBAC5D,EAAC,OAAO,EAAE,gBAAgB,EAAE,QAAQ,EAAE,oBAAoB,EAAC;oBAC3D,EAAC,OAAO,EAAE,qBAAqB,EAAE,QAAQ,EAAE,wBAAwB,EAAC,EAAE;wBACpE,OAAO,EAAE,MAAM;wBACf,UAAU,EAAE,kBAAkB;wBAC9B,IAAI,EAAE;4BACJ,aAAa,EAAE,eAAe,EAAE,QAAQ,EAAE,qBAAqB,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM;yBAC5F;qBACF;oBACD,aAAa,CAAC,EAAE,CAAC;iBAClB;aACF,EAAG,EAAE;CACL,CACA","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Location, LocationStrategy} from '@angular/common';\nimport {MockLocationStrategy, SpyLocation} from '@angular/common/testing';\nimport {Compiler, Injectable, Injector, ModuleWithProviders, NgModule, NgModuleFactory, NgModuleFactoryLoader} from '@angular/core';\n\nimport {Route, Router, RouterOutletMap, UrlSerializer} from '../index';\nimport {Routes} from '../src/config';\nimport {ROUTES} from '../src/router_config_loader';\nimport {ROUTER_PROVIDERS, RouterModule, provideRoutes} from '../src/router_module';\nimport {flatten} from '../src/utils/collection';\nexport class SpyNgModuleFactoryLoader implements NgModuleFactoryLoader {\n  public stubbedModules: {[path: string]: any} = {};\n\n  constructor(private compiler: Compiler) {}\n\n  load(path: string): Promise<NgModuleFactory<any>> {\n    if (this.stubbedModules[path]) {\n      return this.compiler.compileModuleAsync(this.stubbedModules[path]);\n    } else {\n      return <any>Promise.reject(new Error(`Cannot find module ${path}`));\n    }\n  }\n/** @nocollapse */\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: Compiler, },\n];\n}\n\nfunction setupTestingRouter(\n    urlSerializer: UrlSerializer, outletMap: RouterOutletMap, location: Location,\n    loader: NgModuleFactoryLoader, compiler: Compiler, injector: Injector, routes: Route[][]) {\n  return new Router(\n      null, urlSerializer, outletMap, location, injector, loader, compiler, flatten(routes));\n}\nexport class RouterTestingModule {\n  static withRoutes(routes: Routes): ModuleWithProviders {\n    return {ngModule: RouterTestingModule, providers: [provideRoutes(routes)]};\n  }\n/** @nocollapse */\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  exports: [RouterModule],\n  providers: [\n    ROUTER_PROVIDERS, {provide: Location, useClass: SpyLocation},\n    {provide: LocationStrategy, useClass: MockLocationStrategy},\n    {provide: NgModuleFactoryLoader, useClass: SpyNgModuleFactoryLoader}, {\n      provide: Router,\n      useFactory: setupTestingRouter,\n      deps: [\n        UrlSerializer, RouterOutletMap, Location, NgModuleFactoryLoader, Compiler, Injector, ROUTES\n      ]\n    },\n    provideRoutes([])\n  ]\n}, ] },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}