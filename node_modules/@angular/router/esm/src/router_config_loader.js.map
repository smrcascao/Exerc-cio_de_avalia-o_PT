{"version":3,"file":"router_config_loader.js","sourceRoot":"","sources":["../../../../../modules/@angular/router/src/router_config_loader.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;OAEI,EAAC,QAAQ,EAA8E,WAAW,EAAC,MAAM,eAAe;OAExH,EAAC,WAAW,EAAC,MAAM,6BAA6B;OAChD,EAAC,EAAE,EAAE,MAAM,oBAAoB;OAG/B,EAAC,OAAO,EAAE,kBAAkB,EAAC,MAAM,oBAAoB;AAG9D,OAAO,MAAM,MAAM,GAAG,IAAI,WAAW,CAAC,QAAQ,CAAC,CAAC;AAEhD;IACE,YACW,MAAe,EAAS,QAAkB,EAC1C,eAAyC;QADzC,WAAM,GAAN,MAAM,CAAS;QAAS,aAAQ,GAAR,QAAQ,CAAU;QAC1C,oBAAe,GAAf,eAAe,CAA0B;IAAG,CAAC;AAC1D,CAAC;AAED;IACE,YAAoB,MAA6B,EAAU,QAAkB;QAAzD,WAAM,GAAN,MAAM,CAAuB;QAAU,aAAQ,GAAR,QAAQ,CAAU;IAAG,CAAC;IAEjF,IAAI,CAAC,cAAwB,EAAE,YAA0B;QACvD,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC;YAC/C,MAAM,GAAG,GAAG,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;YACrC,MAAM,CAAC,IAAI,kBAAkB,CACzB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,QAAQ,EAAE,GAAG,CAAC,wBAAwB,CAAC,CAAC;QACrF,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,iBAAiB,CAAC,YAA0B;QAClD,EAAE,CAAC,CAAC,OAAO,YAAY,KAAK,QAAQ,CAAC,CAAC,CAAC;YACrC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;QACrD,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,YAAY,QAAQ,CAAC;YACtD,MAAM,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;iBACpC,QAAQ,CACL,CAAC,IAAI,WAAW,GAAG,EAAE,CAAO,CAAC,CAAC,GAAG,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7F,CAAC;IACH,CAAC;AACH,CAAC;AAAA","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Compiler, ComponentFactoryResolver, Injector, NgModuleFactory, NgModuleFactoryLoader, OpaqueToken} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {fromPromise} from 'rxjs/observable/fromPromise';\nimport {of } from 'rxjs/observable/of';\n\nimport {LoadChildren, Route} from './config';\nimport {flatten, wrapIntoObservable} from './utils/collection';\n\n\nexport const ROUTES = new OpaqueToken('ROUTES');\n\nexport class LoadedRouterConfig {\n  constructor(\n      public routes: Route[], public injector: Injector,\n      public factoryResolver: ComponentFactoryResolver) {}\n}\n\nexport class RouterConfigLoader {\n  constructor(private loader: NgModuleFactoryLoader, private compiler: Compiler) {}\n\n  load(parentInjector: Injector, loadChildren: LoadChildren): Observable<LoadedRouterConfig> {\n    return this.loadModuleFactory(loadChildren).map(r => {\n      const ref = r.create(parentInjector);\n      return new LoadedRouterConfig(\n          flatten(ref.injector.get(ROUTES)), ref.injector, ref.componentFactoryResolver);\n    });\n  }\n\n  private loadModuleFactory(loadChildren: LoadChildren): Observable<NgModuleFactory<any>> {\n    if (typeof loadChildren === 'string') {\n      return fromPromise(this.loader.load(loadChildren));\n    } else {\n      const offlineMode = this.compiler instanceof Compiler;\n      return wrapIntoObservable(loadChildren())\n          .mergeMap(\n              t => offlineMode ? of (<any>t) : fromPromise(this.compiler.compileModuleAsync(t)));\n    }\n  }\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}